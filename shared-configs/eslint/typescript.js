module.exports = {
  root: false,
  plugins: ['@typescript-eslint'],
  extends: ['plugin:@typescript-eslint/recommended', 'plugin:@typescript-eslint/recommended-requiring-type-checking'],
  rules: {
    '@typescript-eslint/array-type': 'error',
    '@typescript-eslint/consistent-indexed-object-style': ['error', 'record'],
    '@typescript-eslint/class-literal-property-style': ['error', 'fields'],
    '@typescript-eslint/consistent-type-assertions': [
      'error',
      {
        assertionStyle: 'as',
        objectLiteralTypeAssertions: 'allow',
      },
    ],
    '@typescript-eslint/explicit-member-accessibility': [
      'error',
      { accessibility: 'explicit', overrides: { constructors: 'no-public', properties: 'off' } },
    ],
    '@typescript-eslint/explicit-module-boundary-types': 'error',
    '@typescript-eslint/member-ordering': [
      'error',
      {
        default: {
          memberTypes: [
            'signature',
            'public-static-field',
            'public-static-get',
            'public-static-set',
            'protected-static-field',
            'protected-static-get',
            'protected-static-set',
            'private-static-field',
            'private-static-get',
            'private-static-set',

            'public-abstract-field',
            'public-abstract-get',
            'public-abstract-set',
            'protected-abstract-field',
            'protected-abstract-get',
            'protected-abstract-set',
            'private-abstract-field',
            'private-abstract-get',
            'private-abstract-set',

            'public-decorated-field',
            'public-decorated-get',
            'public-decorated-set',
            'protected-decorated-field',
            'protected-decorated-get',
            'protected-decorated-set',
            'private-decorated-field',
            'private-decorated-get',
            'private-decorated-set',

            'public-instance-field',
            'public-instance-get',
            'public-instance-set',
            'protected-instance-field',
            'protected-instance-get',
            'protected-instance-set',
            'private-instance-field',
            'private-instance-get',
            'private-instance-set',

            'constructor',

            'public-static-method',
            'protected-static-method',
            'private-static-method',

            'public-abstract-method',
            'protected-abstract-method',
            'private-abstract-method',

            'public-instance-method',
            'protected-instance-method',
            'private-instance-method',
          ],
        },
      },
    ],
    '@typescript-eslint/method-signature-style': 'error',
    '@typescript-eslint/explicit-function-return-type': [
      'error',
      {
        allowExpressions: true,
      },
    ],
    '@typescript-eslint/no-meaningless-void-operator': 'error',
    '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'error',
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
    '@typescript-eslint/no-unnecessary-condition': 'error',
    '@typescript-eslint/prefer-enum-initializers': 'error',
    '@typescript-eslint/prefer-for-of': 'error',
    '@typescript-eslint/prefer-includes': 'error',
    '@typescript-eslint/prefer-nullish-coalescing': 'error',
    '@typescript-eslint/prefer-optional-chain': 'error',
    '@typescript-eslint/prefer-reduce-type-parameter': 'error',
    '@typescript-eslint/prefer-return-this-type': 'error',
    '@typescript-eslint/prefer-string-starts-ends-with': 'error',
    '@typescript-eslint/switch-exhaustiveness-check': 'error',
    'dot-notation': 'off',
    '@typescript-eslint/dot-notation': 'error',
    'no-dupe-class-members': 'off',
    '@typescript-eslint/no-dupe-class-members': 'error',
    'no-duplicate-imports': 'off',
    '@typescript-eslint/no-duplicate-imports': 'error',
    'no-magic-numbers': 'off',
    '@typescript-eslint/no-magic-numbers': [
      'error',
      {
        ignoreEnums: true,
        ignoreNumericLiteralTypes: true,
        ignoreReadonlyClassProperties: true,
        ignore: [-1, 0, 1, 2],
      },
    ],
    '@typescript-eslint/unbound-method': [
      'error',
      {
        ignoreStatic: true,
      },
    ],
    'no-redeclare': 'off',
    '@typescript-eslint/no-redeclare': 'error',
    'no-throw-literal': 'off',
    '@typescript-eslint/no-throw-literal': 'error',
    'no-unused-expressions': 'off',
    '@typescript-eslint/no-unused-expressions': 'error',
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': 'error',
    'no-useless-constructor': 'off',
    '@typescript-eslint/no-useless-constructor': 'error',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/no-base-to-string': 'warn',
    '@typescript-eslint/unified-signatures': 'warn',
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/no-non-null-assertion': 'off',
    'no-shadow': 'off',
    '@typescript-eslint/no-shadow': 'error',
  },
  overrides: [
    {
      files: ['*.spec.ts'],
      rules: {
        'max-classes-per-file': ['off'],
        'no-magic-numbers': ['off'],
        '@typescript-eslint/no-magic-numbers': ['off'],
      },
    },
  ],
};
